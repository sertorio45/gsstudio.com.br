{"file":"useBlogCards-Ucfk__EF.js","mappings":";AAIO,SAAS,eAAe;AACvB,QAAA,WAAW,IAAe,CAAA,CAAE;AAC5B,QAAA,aAAa,IAAgB,CAAA,CAAE;AAC/B,QAAA,UAAU,IAAI,IAAI;AAClB,QAAA,cAAc,IAAI,KAAK;AACvB,QAAA,UAAU;AAEhB,QAAM,kBAAkB;AAClB,QAAA,sBAAsB,IAAI,eAAe;AAe/C,QAAM,mBAAmB,MAAM;AAC7B,QAAI,YAAY,SAAS,CAAC,gBAAgB,MAAO;AAEjD,gBAAY,QAAQ;AAEpB,eAAW,MAAM;AACf,0BAAoB,SAAS;AAC7B,kBAAY,QAAQ;AAAA,OACnB,GAAI;AAAA,EAAA;AAGH,QAAA,oBAAoB,SAAS,MAAM;AACvC,WAAO,SAAS,MAAM,MAAM,GAAG,oBAAoB,KAAK;AAAA,EAAA,CACzD;AAEK,QAAA,kBAAkB,SAAS,MAAM;AAC9B,WAAA,oBAAoB,QAAQ,SAAS,MAAM;AAAA,EAAA,CACnD;AAWK,QAAA,kBAAkB,CAAC,YAAqB;AAC5C,QAAI,QAAQ,SAAS,QAAQ,MAAM,KAAK;AACtC,aAAO,IAAI,IAAI,QAAQ,MAAM,KAAK,OAAO,EAAE;AAAA,IAC7C;AACO,WAAA;AAAA,EAAA;AAGH,QAAA,mBAAmB,CAAC,UAAiB;AACzC,UAAM,MAAM,MAAM;AAClB,QAAI,MAAM;AAAA,EAAA;AAGN,QAAA,mBAAmB,CAAC,eAAuB;AACzC,UAAA,WAAW,WAAW,MAAM,KAAK,CAAO,QAAA,IAAI,OAAO,UAAU;AAC5D,WAAA,WAAW,SAAS,QAAQ;AAAA,EAAA;AAQ9B,SAAA;AAAA,IACL,UAAU;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;","names":[],"sources":["../../../../composables/useBlogCards.ts"],"sourcesContent":["import { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport type { Article, Category } from '~/types';\n\nexport function useBlogCards() {\n  const articles = ref<Article[]>([]);\n  const categories = ref<Category[]>([]);\n  const loading = ref(true);\n  const loadingMore = ref(false);\n  const baseURL = import.meta.env.VITE_STRAPI_URL || 'https://str-gsstudio.gsstudio.com.br';\n  const VITE_STRAPI_TENANT_ID = import.meta.env.VITE_STRAPI_TENANT_ID;\n  const articlesPerPage = 4;\n  const loadedArticlesCount = ref(articlesPerPage);\n\n  const fetchArticles = async (tenantId: string) => {\n    try {\n      const response = await axios.get(`${baseURL}/tenants/${tenantId}`);\n      articles.value = response.data.articles\n        .sort((a: Article, b: Article) => new Date(b.published_at).getTime() - new Date(a.published_at).getTime())\n        .map((article: Article) => ({ ...article, imageLoaded: false }));\n    } catch (error) {\n      console.error('Error fetching articles:', error);\n    } finally {\n      loading.value = false;\n    }\n  };\n\n  const loadMoreArticles = () => {\n    if (loadingMore.value || !hasMoreArticles.value) return;\n\n    loadingMore.value = true;\n\n    setTimeout(() => {\n      loadedArticlesCount.value += articlesPerPage;\n      loadingMore.value = false;\n    }, 1000);\n  };\n\n  const displayedArticles = computed(() => {\n    return articles.value.slice(0, loadedArticlesCount.value);\n  });\n\n  const hasMoreArticles = computed(() => {\n    return loadedArticlesCount.value < articles.value.length;\n  });\n\n  const fetchCategories = async () => {\n    try {\n      const response = await axios.get(`${baseURL}/categories`);\n      categories.value = response.data;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    }\n  };\n\n  const getArticleImage = (article: Article) => {\n    if (article.thumb && article.thumb.url) {\n      return new URL(article.thumb.url, baseURL).href;\n    }\n    return 'https://s3.gsstudio.com.br/gsstudio/site/img/thumb_blog_gsstudio.webp';\n  };\n\n  const handleImageError = (event: Event) => {\n    const img = event.target as HTMLImageElement;\n    img.src = 'https://s3.gsstudio.com.br/gsstudio/site/img/thumb_blog_gsstudio.webp';\n  };\n\n  const getCategoryTitle = (categoryId: number) => {\n    const category = categories.value.find(cat => cat.id === categoryId);\n    return category ? category.title : 'Categoria desconhecida';\n  };\n\n  onMounted(() => {\n    fetchArticles(VITE_STRAPI_TENANT_ID);\n    fetchCategories();\n  });\n\n  return {\n    articles: displayedArticles,\n    categories,\n    loading,\n    loadingMore,\n    loadMoreArticles,\n    hasMoreArticles,\n    getArticleImage,\n    getCategoryTitle,\n    handleImageError,\n  };\n}\n"],"version":3}